debugSource('E:/Hongming/tcga_data_access/clinical_download/retrieve_clinicalinformation_tcga.R')
install.packages("rlang")
debugSource('E:/Hongming/tcga_data_access/clinical_download/retrieve_clinicalinformation_tcga.R')
install.packages("hms", dependencies = FALSE)
debugSource('E:/Hongming/tcga_data_access/clinical_download/retrieve_clinicalinformation_tcga.R')
install.packages("hms")
install.packages("hms")
debugSource('E:/Hongming/tcga_data_access/clinical_download/retrieve_clinicalinformation_tcga.R')
install.a
install.packages("rlang")
debugSource('E:/Hongming/tcga_data_access/clinical_download/retrieve_clinicalinformation_tcga.R')
install.packages("hms")
install.packages("hms")
install.packages("hms",dependencies = TRUE)
debugSource('E:/Hongming/tcga_data_access/clinical_download/retrieve_clinicalinformation_tcga.R')
version
install.packages("installr"); library(installr) # install+load installr
updateR() # updating R.
updateR()
debugSource('E:/Hongming/tcga_data_access/clinical_download/retrieve_clinicalinformation_tcga.R')
debugSource('E:/Hongming/tcga_data_access/clinical_download/retrieve_clinicalinformation_tcga.R')
update.packages(checkBuilt = TRUE, ask = FALSE)
source("http://bioconductor.org/biocLite.R")
biocLite("TCGAbiolinks")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
debugSource('E:/Hongming/tcga_data_access/clinical_download/retrieve_clinicalinformation_tcga.R')
debugSource('E:/Hongming/tcga_data_access/clinical_download/retrieve_clinicalinformation_tcga.R')
#setwd("E:/Hongming/projects/tcga-clinical-download")
setwd("./")
mv_CancerTypes = read.table("TCGA_Cancer_Type_List.txt")
for (mn_i in 1:length(mv_CancerTypes[, 1])) {
mstr_type <- paste0(mv_CancerTypes[mn_i, ], "")
tryCatch({
#clinical <- GDCquery_clinic(project = "TCGA-LUAD", type = "clinical")
#datatable(clinical, filter = 'top',
#          options = list(scrollX = TRUE, keys = TRUE, pageLength = 5),
#          rownames = FALSE)
query <-
GDCquery(project = mstr_type,
data.category = "Clinical",
file.type = "xml")
GDCdownload(query)
clinical.patient <-
GDCprepare_clinic(query, clinical.info = "patient")
clinical.followup <-
GDCprepare_clinic(query,clinical.info = "follow_up")
write.table(
clinical.patient,
file = paste0("./results/", mstr_type, "_patient_info.txt"),
sep = "\t",
quote = FALSE,
row.names = FALSE
)
write.table(
clinical.followup,
file = paste0("./results/", mstr_type, "_patient_follow_up_info.txt"),
sep = "\t",
quote = FALSE,
row.names = FALSE
)
},error = function(err) {
print(paste(mn_i, mstr_type, "download error"))
})
}
## -------download tcga patient clinical info.-----------##
# author: Hongming XU, CCF, 2020
# email: mxu@ualberta.ca
#- to install TCGAbiolinks use below code:
# source("http://bioconductor.org/biocLite.R")
# biocLite("TCGAbiolinks")
#- tcga biolinks website
# https://bioconductor.org/packages/devel/bioc/vignettes/TCGAbiolinks/inst/doc/clinical.html
#devtools::install_github(repo = "BioinformaticsFMRP/TCGAbiolinks")
#library("TCGAbiolinks")
#setwd("E:/Hongming/projects/tcga-clinical-download")
setwd("./")
mv_CancerTypes = read.table("TCGA_Cancer_Type_List.txt")
for (mn_i in 1:length(mv_CancerTypes[, 1])) {
mstr_type <- paste0(mv_CancerTypes[mn_i, ], "")
tryCatch({
#clinical <- GDCquery_clinic(project = "TCGA-LUAD", type = "clinical")
#datatable(clinical, filter = 'top',
#          options = list(scrollX = TRUE, keys = TRUE, pageLength = 5),
#          rownames = FALSE)
query <-
GDCquery(project = mstr_type,
data.category = "Clinical",
file.type = "xml")
GDCdownload(query)
clinical.patient <-
GDCprepare_clinic(query, clinical.info = "patient")
clinical.followup <-
GDCprepare_clinic(query,clinical.info = "follow_up")
write.table(
clinical.patient,
file = paste0("./results/", mstr_type, "_patient_info.txt"),
sep = "\t",
quote = FALSE,
row.names = FALSE
)
write.table(
clinical.followup,
file = paste0("./results/", mstr_type, "_patient_follow_up_info.txt"),
sep = "\t",
quote = FALSE,
row.names = FALSE
)
},error = function(err) {
print(paste(mn_i, mstr_type, "download error"))
})
}
source("https://bioconductor.org/biocLite.R")
biocLite("TCGAbiolinks")
BiocManager::install("TCGAbiolinks")
debugSource('E:/Hongming/tcga_data_access/clinical_download/retrieve_clinicalinformation_tcga.R')
View(mv_CancerTypes)
#setwd("E:/Hongming/projects/tcga-clinical-download")
setwd("./")
## -------download tcga patient clinical info.-----------##
# author: Hongming XU, CCF, 2020
# email: mxu@ualberta.ca
#- to install TCGAbiolinks (see: https://bioconductor.org/install/): use below code for >R3.6:
# BiocManager::install("TCGAbiolinks")
#- tcga biolinks website
# https://bioconductor.org/packages/devel/bioc/vignettes/TCGAbiolinks/inst/doc/clinical.html
#devtools::install_github(repo = "BioinformaticsFMRP/TCGAbiolinks")
library("TCGAbiolinks")
#setwd("E:/Hongming/projects/tcga-clinical-download")
setwd("./")
mv_CancerTypes = read.table("TCGA_Cancer_Type_List.txt")
for (mn_i in 1:length(mv_CancerTypes[, 1])) {
mstr_type <- paste0(mv_CancerTypes[mn_i, ], "")
tryCatch({
#clinical <- GDCquery_clinic(project = "TCGA-LUAD", type = "clinical")
#datatable(clinical, filter = 'top',
#          options = list(scrollX = TRUE, keys = TRUE, pageLength = 5),
#          rownames = FALSE)
query <-
GDCquery(project = mstr_type,
data.category = "Clinical",
file.type = "xml")
GDCdownload(query)
clinical.patient <-
GDCprepare_clinic(query, clinical.info = "patient")
clinical.followup <-
GDCprepare_clinic(query,clinical.info = "follow_up")
write.table(
clinical.patient,
file = paste0("./results/", mstr_type, "_patient_info.txt"),
sep = "\t",
quote = FALSE,
row.names = FALSE
)
write.table(
clinical.followup,
file = paste0("./results/", mstr_type, "_patient_follow_up_info.txt"),
sep = "\t",
quote = FALSE,
row.names = FALSE
)
},error = function(err) {
print(paste(mn_i, mstr_type, "download error"))
})
}
debugSource('E:/Hongming/tcga_data_access/clinical_download/retrieve_clinicalinformation_tcga.R')
View(mv_CancerTypes)
mstr_type
mstr_type
debugSource('E:/Hongming/tcga_data_access/clinical_download/retrieve_clinicalinformation_tcga.R')
mstr_type
debugSource('E:/Hongming/tcga_data_access/clinical_download/retrieve_clinicalinformation_tcga.R')
View(mv_CancerTypes)
debugSource('E:/Hongming/tcga_data_access/clinical_download/retrieve_clinicalinformation_tcga.R')
mstr_type
mstr_type
